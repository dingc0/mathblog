var Preview={delay:50,preview:null,buffer:null,timeout:null,mjRunning:!1,mjPending:!1,oldText:null,Init:function(e,t,i){this.InputID=document.getElementById(e),this.preview=document.getElementById(t),this.buffer=document.getElementById(i)},SwapBuffers:function(){var e=this.preview,t=this.buffer;this.buffer=e,this.preview=t,e.style.visibility="hidden",e.style.position="absolute",t.style.position="",t.style.visibility=""},Update:function(){this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout(this.callback,this.delay)},CreatePreview:function(){if(Preview.timeout=null,!this.mjPending){var e=this.InputID.value,t=new Markdown.Converter;RemoveAndReplaceMath=new MathEdit,txt=e,txt=RemoveAndReplaceMath[0](txt),txt=t.makeHtml(txt),txt=RemoveAndReplaceMath[1](txt),(e=txt)!==this.oldtext&&(this.mjRunning?(this.mjPending=!0,MathJax.Hub.Queue(["CreatePreview",this])):(this.buffer.innerHTML=this.oldtext=e,this.mjRunning=!0,MathJax.Hub.Queue(["Typeset",MathJax.Hub,this.buffer],["PreviewDone",this])))}},PreviewDone:function(){this.mjRunning=this.mjPending=!1,this.SwapBuffers()}};Preview.callback=MathJax.Callback(["CreatePreview",Preview]),Preview.callback.autoReset=!0;